!        Generated by TAPENADE     (INRIA, Ecuador team)
!  Tapenade 3.10 (r5717) - 30 Jul 2015 16:03
!
!  Differentiation of model in forward (tangent) mode:
!   variations   of useful results: y
!   with respect to varying inputs: x
SUBROUTINE LZ95_MODEL_TLM(x, xd, yd, n, f)
  ! This subroutine computes the tangent linear model of the Lorenz
  ! governing equations
  !
  ! dX[k] / dt = X[k] * (X[k + 1] - X[k - 2]) - X[k] + F
  !
  ! using Tapenade. The comments above the subroutine were generated
  ! by Tapenade. The auto-generated code was modified to suit the
  ! needs of the user.
  !
  ! Inputs:
  !     x - Vector of X-variables
  !     xd - Direction vector
  !     n - Length of x
  !     F - Constant forcing term
  !
  ! Output:
  !     yd - The tangent linear model evaluated at x in the direction
  !          of xd.
  !
  ! References:
  !     [1] Lorenz, E. N. and Emanuel K. A. (1998). Optimal Sites for
  !         Supplementary Weather Observations: Simulation with a
  !         Small Model. Journal of the Atmospheric Sciences.
  !     [2] Hascoët, Laurent and Pascual, Valérie. (2013). The
  !         Tapenade Automatic Differentiation Tool: Principles,
  !         Model, and Specification.
  !
  ! Author:             Tapenade 3.10
  ! Edited by:          Jeremy Shaw
  ! Institution:        Portland State University
  ! Date Created:       18 November 2015
  ! Last Modified Date: 20 November 2015
  IMPLICIT NONE
  INTEGER, INTENT(IN) :: n
  DOUBLE PRECISION, DIMENSION(n), INTENT(IN) :: x
  DOUBLE PRECISION, DIMENSION(n), INTENT(IN) :: xd
  DOUBLE PRECISION, DIMENSION(n), INTENT(OUT) :: yd
  DOUBLE PRECISION, INTENT(IN) :: f
  INTEGER :: i
  yd = 0.D0
  yd(1) = xd(n)*(x(2)-x(n-1)) + x(n)*(xd(2)-xd(n-1)) - xd(1)
  yd(2) = xd(1)*(x(3)-x(n)) + x(1)*(xd(3)-xd(n)) - xd(2)
  
  DO i=3,n-1
    yd(i) = xd(i-1)*(x(i+1)-x(i-2)) + x(i-1)*(xd(i+1)-xd(i-2)) - xd(i)
  END DO
  yd(n) = xd(n-1)*(x(1)-x(n-2)) + x(n-1)*(xd(1)-xd(n-2)) - xd(n)
END SUBROUTINE LZ95_MODEL_TLM
